{"version":3,"sources":["EditMenu.jsx","initialConfig.js","Tiergarten.jsx","App.js","index.js"],"names":["LargeEmoji","children","className","EditMenu","props","Object","entries","config","participantTypes","map","participantType","typeConfig","onClick","handleClick","emoji","label","state","initialConfig","rabbit","requirements","legs","shirts","cricket","octopus","materialNames","persons","inverseMatrix","GuessCountsForm","useState","fromEntries","keys","material","values","setValues","handleChange","event","newValues","assign","target","name","value","class","onSubmit","guessedCounts","Array","from","i","reduce","sum_","j","Math","floor","guessCounts","console","log","updateValues","preventDefault","count","type","min","required","placeholder","materialCounts","onChange","Tiergarten","result","getMaterialCounts","participantPropsByType","handleDelete","participants","concat","key","data-tooltip","alt","makeParticipantsForType","content","length","buildInitialState","reducer","action","nextState","App","useReducer","dispatch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16937bf3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst LargeEmoji = ({children}) => (\n  <div className=\"large-emoji\">{children}</div>\n)\n\nconst EditMenu = (props) => (\n  <div className=\"ui labeled icon compact menu\">{\n    Object.entries(props.config.participantTypes)\n    .map(([participantType, typeConfig]) => (\n      <a\n        key={participantType}\n        className={`item add-{participantType}`}\n        onClick={props.handleClick(participantType)}\n      >\n        <LargeEmoji>{typeConfig.emoji}</LargeEmoji>\n        {typeConfig.label}\n        <div className=\"ui top right attached label\">\n          {props.state[participantType]}\n        </div>\n      </a>\n    ))\n  }</div>\n);\n\nexport default EditMenu;\n","const initialConfig = {\n  participantTypes: {\n    rabbit: {\n      label: \"Hase\",\n      emoji: \"🐇\",\n      requirements: {\n        legs: 4,\n        shirts: 1\n      }\n    },\n    cricket: {\n      label: \"Grille\",\n      emoji: \"🦗\",\n      requirements: {\n        legs: 6,\n        shirts: 0\n      }\n    },\n    octopus: {\n      label: \"Oktopus\",\n      emoji: \"🐙\",\n      requirements: {\n        legs: 8,\n        shirts: 0\n      }\n    },\n  }\n};\n\nexport default initialConfig;\n","import React, { useState } from \"react\";\n\nconst makeParticipantsForType = (participantType, count, typeConfig, props) =>\n  Array.from(Array(count).entries()).map(\n    ([key, __]) => (\n      <a\n        key={participantType + key}\n        data-tooltip=\"entfernen\"\n        alt={typeConfig.label}\n        {...props}\n      >\n        {typeConfig.emoji}\n      </a>\n    ));\n\nconst materialNames = {\n  persons: \"Stirnbänder\",\n  legs: \"Socken\",\n  shirts: \"T-Shirts (leider nur für Hasen)\"\n};\n\nconst inverseMatrix = [  // only works for the default config\n  [0, 0, 1],\n  [4, -0.5, -2],\n  [-3, 0.5, 1],\n];\n\nconst fixValue = value => (\n  (value < 0) ? 0 : Math.floor(value)\n);\n\nconst guessCounts = values => Object.fromEntries(\n  // order of participantTypes and materials is important\n  Array.from([\"rabbit\", \"cricket\", \"octopus\"].entries()).map(\n    ([i, participantType]) => [\n      participantType,\n      fixValue(\n        Array.from(\n          [values.persons, values.legs, values.shirts].entries()\n        ).reduce(\n          (sum_, [j, val]) => sum_ + val * inverseMatrix[i][j],\n          0)\n      )\n    ]\n  )\n);\n\nconst GuessCountsForm = props => {\n  const [values, setValues] = useState(() => Object.fromEntries(\n    Object.keys(materialNames).map(material => [material, \"\"])\n  ));\n\n  const handleChange = event => {\n    const newValues = Object.assign({}, values);\n    newValues[event.target.name] = event.target.value;\n    setValues(newValues);\n  };\n\n  const handleSubmit = event => {\n    const guessedCounts = guessCounts(values);\n    console.log(\"submit\", values, guessedCounts);\n    props.updateValues(guessedCounts);\n    event.preventDefault();\n  };\n\n  return (\n    <form class=\"ui form\" onSubmit={handleSubmit}>\n      <div class=\"fields\">{\n        Object.entries(values).map(([material, count]) => (\n          <div class=\"field\" key={material}>\n            <label>{materialNames[material]}</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              required\n              name={material}\n              placeholder={props.materialCounts[material]}\n              value={count}\n              onChange={handleChange}\n            />\n          </div>\n        ))\n      }</div>\n      <button class=\"ui button\" type=\"submit\">\n        Teilnehmer*innenzahlen erraten\n      </button>\n    </form>\n  );\n};\n\nconst getMaterialCounts = (state, participantTypes) => (\n  Object.entries(state).reduce(\n    (result, [participantType, count]) => ({\n      persons: result.persons + (count || 0),\n      legs: result.legs + (\n        participantTypes[participantType].requirements.legs * count || 0),\n      shirts:\n        result.shirts + (\n          participantTypes[participantType].requirements.shirts * count || 0)\n    }),\n    { persons: 0, legs: 0, shirts: 0 }\n  )\n);\n\nconst Tiergarten = props => {\n  const participantTypes = props.config.participantTypes;\n  const materialCounts = getMaterialCounts(props.state, participantTypes);\n  const participantPropsByType = {\n    rabbit: { onClick: props.handleDelete(\"rabbit\") },\n    cricket: { onClick: props.handleDelete(\"cricket\") },\n    octopus: { onClick: props.handleDelete(\"octopus\") }\n  };\n  const participants = Object.entries(props.state).reduce(\n    (result, [participantType, count]) =>\n      result.concat(\n        makeParticipantsForType(\n          participantType,\n          count,\n          participantTypes[participantType],\n          participantPropsByType[participantType]\n        )\n      ),\n    []\n  );\n  const content = participants.length ? participants : \"leerer Tiergarten…\";\n  return (\n    <>\n      <div class=\"ui card\">\n        <div class=\"image\">\n          <div class=\"tiergarten\">{content}</div>\n        </div>\n        <div class=\"content\">\n          <h2 class=\"header\">Benötigte Materialien</h2>\n          {\n            Object.entries(materialCounts).map(([material, count]) => (\n                <div class=\"ui tiny horizontal statistic\" key={material}>\n                  <div class=\"value\">\n                    {count}\n                  </div>\n                  <div class=\"label\">\n                    {materialNames[material]}\n                  </div>\n                </div>\n            ))\n          }\n        </div>\n        <div class=\"content\">\n          <h2 class=\"header\">Materialien schon da?</h2>\n          <GuessCountsForm\n            materialCounts={materialCounts}\n            updateValues={props.updateValues}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Tiergarten;\n","import React, { useReducer, useState } from \"react\";\nimport EditMenu from \"./EditMenu\";\nimport initialConfig from \"./initialConfig\";\nimport Tiergarten from \"./Tiergarten\";\nimport \"./style.css\";\nimport \"fomantic-ui-css/semantic.css\";\n\nconst buildInitialState = (config) => Object.fromEntries(\n  Object.keys(config.participantTypes)\n  .map(participantType => [participantType, 0])\n);\n\nconst reducer = (state, action) => {\n  const nextState = Object.assign({}, state);\n  switch(action.type) {\n    case \"update\":\n      Object.assign(nextState, action.values);\n      return nextState;\n    case \"add\":\n      nextState[action.participantType] += 1;\n      return nextState;\n    case \"delete\":\n      nextState[action.participantType] -= 1;\n      return nextState;\n  }\n};\n\nconst App = () => {\n  const [config, setConfig] = useState(initialConfig);\n  const [state, dispatch] = useReducer(reducer, config, buildInitialState);\n  const updateValues = values => {\n    dispatch({ type: \"update\", values })\n  };\n  const handleAdd = participantType => event => {\n    dispatch({ type: \"add\", participantType });\n    console.log(state);\n  };\n  const handleDelete = participantType => event => {\n    dispatch({ type: \"delete\", participantType });\n    console.log(state);\n  };\n  return (\n    <div className=\"ui container\">\n      <h1 className=\"ui header\">Tiergarten</h1>\n      <p className=\"ui info message\">\n        Klick auf die Teilnehmer*innen-Knöpfe, damit sie in den Tiergarten\n        kommen!\n      </p>\n      <EditMenu\n        config={config}\n        state={state}\n        handleClick={handleAdd}\n      />\n      <Tiergarten\n        config={config}\n        state={state}\n        updateValues={updateValues}\n        handleDelete={handleDelete}\n      />\n    </div>\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}